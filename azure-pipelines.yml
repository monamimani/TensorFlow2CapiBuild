# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  tf2GitTag: v2.1.0

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

pool:
  vmImage: 'windows-2019'

steps:
# - task: Cache@2
#   inputs:
#     key: 'TensorFlow2Repo'
#     path: '$(Pipeline.Workspace)/tf2'
#     cacheHitVar: 'CACHE_RESTORED'
#     restoreKeys: 'TensorFlow2Repo'

- script: git clone --depth 1 --branch $(tf2GitTag) https://github.com/tensorflow/tensorflow.git tf2
  condition: ne(variables.CACHE_RESTORED, 'true')
  displayName: 'Git clone tensorflow 2'

- script: |
    cd tf2
    ls
    REM bazel --version
    REM bazelisk --version
    REM bazelisk test --config=opt //tensorflow/tools/lib_package:libtensorflow_test
    bazelisk build --config=opt --config=cuda //tensorflow/tools/lib_package:libtensorflow
    robocopy bazel-bin/tensorflow/tools/lib_package/libtensorflow.tar.gz $(Build.ArtifactStagingDirectory)
  displayName: 'Build tensorflow'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'TensorFlow_$(tf2GitTag)'
    publishLocation: 'Container'